name: Deploy Workflow

on:
  push:
    branches:
      - main  # Le workflow se déclenche uniquement sur la branche "main".

jobs:
  # Job 1: Exécuter les tests unitaires
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Récupérer le code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2: Installer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Étape 3: Installer les dépendances
      - name: Install dependencies
        run: npm install

      # Étape 4: Lancer les tests unitaires
      - name: Run unit tests
        run: npm run test

  # Job 2: Tests Cypress (E2E)
  e2e-tests:
    runs-on: ubuntu-latest
    needs: unit-tests  # Ce job dépend du succès des tests unitaires.

    steps:
      # Étape 1: Récupérer le code
      - name: Checkout repository
        uses: actions/checkout@v2

      # Étape 2: Installer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
      


      # Étape 5: Lancer Cypress en mode headless
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          browser: chrome
          build: npm run build
          start: npm run preview

  # Job 3: Déploiement
  deploy:
    runs-on: ubuntu-latest
    needs: e2e-tests  # Ce job dépend du succès des tests Cypress.

    steps:
      # Étape 1: Récupérer le code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2: Installer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16

      # Étape 3: Installer les dépendances
      - name: Install dependencies
        run: npm install

      # Étape 4: Construire le projet (build)
      - name: Build the project
        run: npm run build

      # Étape 5: Déployer via SCP
      - name: Deploy to Server
        uses: appleboy/scp-action@v0.2.1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "dist/"
          target: "/var/www/vhosts/web-moshi.fr/httpdocs/testdeploy"
